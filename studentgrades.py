# -*- coding: utf-8 -*-
"""StudentGrades.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11P-4W_ywnN6Dy_IV1yGYYqzqmQI-ylg_
"""

import json

class Student:
    def __init__(self, name, age, subjects):
        self.name = name
        self.age = age
        self.subjects = subjects

    def calculate_average(self):
        if not self.subjects:
            return 0
        return sum(self.subjects.values()) / len(self.subjects)

    def get_letter_grade(self):
        average_percentage = self.calculate_average()
        if average_percentage >= 90:
            return 'A'
        elif average_percentage >= 80:
            return 'B'
        elif average_percentage >= 70:
            return 'C'
        elif average_percentage >= 60:
            return 'D'
        elif average_percentage >= 50:
            return 'E'
        else:
            return 'Fail'

    @classmethod
    def get_letter_grade_from_percentage(cls, percentage):
        if percentage >= 90:
            return 'A'
        elif percentage >= 80:
            return 'B'
        elif percentage >= 70:
            return 'C'
        elif percentage >= 60:
            return 'D'
        elif percentage >= 50:
            return 'E'
        else:
            return 'Fail'

def add_student():
    name = input("Enter student name: ")
    age = int(input(f"Enter {name}'s age: "))
    num_subjects = int(input(f"Enter the number of subjects {name} studies: "))

    subjects = {}
    for i in range(num_subjects):
        subject_name = input(f"Enter the name of subject {i + 1}: ")
        while True:
            try:
                raw_mark = float(input(f"Enter the mark {name} achieved for {subject_name} (1-100): "))
                # Ensure that the mark is within the valid range (1-100)
                mark = max(0, min(100, raw_mark))
                break
            except ValueError:
                print("Invalid input. Please enter a number.")

        # Convert the mark to percentage
        mark_percentage = mark / 100.0 * 100.0
        subjects[subject_name] = mark_percentage

    return Student(name, age, subjects)

def display_student_info(student):
    print("\nStudent Information:")
    print(f"Name: {student.name}")
    print(f"Age: {student.age}")

    # Display grade and percentage for each subject
    print("Subjects:")
    for subject, percentage in student.subjects.items():
        grade = Student.get_letter_grade_from_percentage(percentage)
        print(f"  {subject}: Grade {grade}, Percentage {percentage:.2f}%")

    print(f"Average Mark: {student.calculate_average():.2f}")
    print(f"Letter Grade: {student.get_letter_grade()}")
    print(f"Percentage: {student.calculate_average():.2f}%")

def save_students(students):
    with open("students.json", "w") as file:
        data = [{"name": student.name, "age": student.age, "subjects": student.subjects} for student in students]
        json.dump(data, file)

def load_students():
    try:
        with open("students.json", "r") as file:
            data = json.load(file)
            students = [Student(student["name"], student["age"], student["subjects"]) for student in data]
        return students
    except FileNotFoundError:
        return []

def handle_menu_choice(choice, students):
    if choice == "1":
        student = add_student()
        students.append(student)
        print("Student added successfully!")
    elif choice == "2":
        if not students:
            print("No students in the database.")
        else:
            for student in students:
                display_student_info(student)
    elif choice == "3":
        if not students:
            print("No students in the database.")
        else:
            class_average = sum(student.calculate_average() for student in students) / len(students)
            print(f"Class Average: {class_average:.2f}")
    elif choice == "4":
        save_students(students)
        print("Data saved successfully!")
    elif choice == "5":
        print("Goodbye! Thanks for using our application")
        exit()
    else:
        print("Invalid choice. Please enter a number between 1 and 5.")

def main():
    students = load_students()

    while True:
        print("\nOptions:")
        print("1. Add Student")
        print("2. View Student Information")
        print("3. View Class Average")
        print("4. Save Data")
        print("5. Exit")

        choice = input("Enter your choice (1-5): ")

        handle_menu_choice(choice, students)

if __name__ == "__main__":
    main()